// Практическая 9.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <cmath>

int main() {

    // 1 выражение 
    
    //double x = 1.5, y = 0.5, z = 0.5;
    //double b;

    //__asm {
    //    fld1                        // Загрузить 1.0 на стек
    //    fld y                       // Загрузить y на стек
    //    fld1                        // Загрузить 1.0 на стек (для прибавления 2)
    //    fld1
    //    fadd                        // 1.0 + 1.0 = 2.0
    //    fadd                        // y + 2
    //    fcos                        // cos(y + 2)
    //    fmul st(0), st(0)           // cos^2(y + 2)
    //    fld1                        // Загрузить 1.0 на стек
    //    fsubr                       // 1 - cos^2(y + 2)

    //    fld x                       // Загрузить x на стек
    //    fmul st(0), st(0)           // x^2
    //    fmul st(0), st(0)           // x^4
    //    fdivp st(1), st(0)          // (1 - cos^2(y + 2)) / x^4

    //    fld z                       // Загрузить z на стек
    //    fsin                        // sin(z)
    //    fmul st(0), st(0)           // sin^2(z)
    //    fld1                        // Загрузить 1.0 на стек (для прибавления 2)
    //    fld1
    //    fadd                        // 1.0 + 1.0 = 2.0
    //    fadd                        // 2 + sin^2(z)
    //    fdivp st(1), st(0)          // (1 - cos^2(y + 2)) / (x^4 * (2 + sin^2(z)))

    //    fld x                       // Загрузить x на стек
    //    fmul st(0), st(0)           // x^2
    //    fld1                        // Загрузить 1.0 на стек
    //    faddp st(1), st(0)          // x^2 + 1
    //    fsqrt                       // sqrt(x^2 + 1)
    //    fld1                        // Загрузить 2.0 на стек (для умножения на 2)
    //    fld1
    //    fadd                        // 1.0 + 1.0 = 2.0
    //    fmul                        // 2 * sqrt(x^2 + 1)
    //    faddp st(1), st(0)          // Добавить к первому результату

    //    fstp b                      // Сохранить результат в b
    //}
    //printf("\t b=%g\n", b);
    //return 0;

    
    
    // 2 выражение 

    double x = 1.5;
    double a;
    __asm {

            // Шаг 1: Вычислить (x^2 + 1)
            fld x                     // Загрузить x на стек
            fmul st(0), st(0)         // x^2
            fld1                      // Загрузить 1 на стек
            faddp st(1), st(0)        // x^2 + 1 сейчас в st(0)

            // Сохранить (x^2 + 1) для последующего использования
            fst st(1)                 // Продублировать (x^2 + 1) на стеке

            // Шаг 2: Вычислить x * sin(x^2 + 1)
            fld st(0)                 // Загрузить (x^2 + 1) снова
            fsin                      // sin(x^2 + 1)
            fld x                     // Загрузить x
            fmul st(0), st(1)         // x * sin(x^2 + 1)

            // Вычислить 2^(x * sin(x^2 + 1)) - 1
            fld1                      // Загрузить 1 на стек
            fld st(1)                 // Загрузить значение из стека
            fyl2x                     // Вычислить log2(2) * (x * sin(x^2 + 1))
            fld1                      // Загрузить 1 на стек
            fscale                    // 2^(x * sin(x^2 + 1))
            fsubrp st(1), st(0)       // 2^(x * sin(x^2 + 1)) - 1

            // Шаг 3: Вычислить tan(x^2 + 1) - 1
            fld st(2)                 // Загрузить (x^2 + 1) снова
            fsincos                   // Вычислить sin(x^2 + 1) и cos(x^2 + 1)
            fxch st(1)                // Поменять местами st(0) и st(1), чтобы cos был в st(0)
            fpatan                    // Вычислить atan(sin/cos) = tan(x^2 + 1)
            fld1                      // Загрузить 1 на стек
            fsubp st(1), st(0)        // tan(x^2 + 1) - 1

            // Разделить (2^(x * sin(x^2 + 1)) - 1) на (tan(x^2 + 1) - 1)
            fdivp st(1), st(0)

            // Шаг 4: Разделить на (sin(x) * log2(x^2 + 1) + 1)
            fld x                     // Загрузить x
            fsin                      // Вычислить sin(x)
            fld st(3)                 // Загрузить (x^2 + 1) снова
            fyl2x                     // Вычислить log2(x^2 + 1)
            fmul st(0), st(1)         // sin(x) * log2(x^2 + 1)
            fld1                      // Загрузить 1 на стек
            faddp st(1), st(0)        // sin(x) * log2(x^2 + 1) + 1
            fdivp st(1), st(0)        // Разделить результат из предыдущего шага

            // Шаг 5: Добавить tan(2^x - 1)
            fld x                     // Загрузить x
            fld1                      // Загрузить 1 на стек
            fld st(1)                 // Загрузить x снова
            fyl2x                     // Вычислить log2(x)
            fscale                    // 2^x
            fld1                      // Загрузить 1 на стек
            fsubp st(1), st(0)        // 2^x - 1
            fld st(0)                 // Скопировать (2^x - 1)
            fpatan                    // Вычислить tan(2^x - 1)
            faddp st(1), st(0)        // Сложить результат из предыдущего шага с tan(2^x - 1)

            fstp a                    // Сохранить результат в переменной a
        }
    

    printf("\t a=%g\n", a);
    return 0;
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
