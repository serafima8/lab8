// Практическая работа 8.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <stdio.h>   // Включаем библиотеку для работы с функцией printf
#include <conio.h>   // Включаем библиотеку для работы с функцией _getch
#include <cmath>     // Включаем библиотеку для работы с математическими функциями, такими как sqrt
#include <cstdio>
#include <iostream>

// 1 задание 


//int main() {
//    double a = std::sqrt(10);    // a = sqrt(10)
//    double b = 2 * std::sqrt(3); // b = 2 * sqrt(3)
//
//    // Инициализируем переменную result для хранения конечного результата
//    double result = 0;
//    __asm {
//        fld a           // Загружаем значение a (sqrt(10)) в стек
//        fld st(0)       // Копируем значение a на вершину стека для дальнейших операций
//        fmul            // Умножаем a на a: st(0) = (sqrt(10))^2 = 10
//
//        fld b          
//        fld st(0)       // Копируем значение b на вершину стека для дальнейших операций
//        fmul            // Умножаем b на b: st(0) = (2 * sqrt(3))^2 = 12
//
//        fsubp st(1), st(0) // Вычитаем st(0) из st(1): st(1) - st(0) -> 10 - 12 = -2 и сохраняем результат в st(1)
//                           // Удаляем вершину стека, оставляя результат на вершине стека
//
//                           fstp result     // Перемещаем результат из вершины стека FPU в переменную result
//    }
//    printf("Result: %g\n", result);
//    return 0;
//}


//2 задание 


//int main() {
//    // Заданные значения катетов
//    double a = 3.0;
//    double b = 4.0;
//
//    // Используем inline assembler для вычислений
//    double c = 0.0; // Гипотенуза
//    double area = 0.0; // Площадь
//
//    __asm {
//        // Вычисление гипотенузы: c = sqrt(a^2 + b^2)
//        fld a               // Загружаем значение a в стек FPU
//        fmul a             // Умножаем a на a, получаем a^2
//
//        fld b               // Загружаем значение b в стек FPU
//        fmul b             // Умножаем b на b, получаем b^2
//
//        fadd               // Складываем a^2 и b^2, результат на вершине стека
//        fsqrt              // Вычисляем квадратный корень, результат на вершине стека
//
//        fstp c             // Сохраняем результат в переменной c
//
//        // Вычисление площади: area = 0.5 * a * b
//        fld a               // Загружаем значение a в стек FPU
//        fmul b             // Умножаем a на b
//
//        fld1                // Загружаем 1.0 в стек FPU
//        fdiv               // Делим на 2
//
//        fstp area          // Сохраняем результат в переменной area
//    }
//    printf("hypotenuse: %g\n", c);
//    printf("Square: %g\n", area);
//    return 0;
//}


//3 задание 

//int main() {
//    // Заданные значения
//    double I = 6.0; // Сила тока (в амперах)
//    double R = 5.0; // Сопротивление (в омах)
//    double t = 2.0; // Время (в секундах)
//    double A = 0.0; // Работа (результат)
//
//    // Используем inline assembler для вычислений
//    __asm {
//        fld I           // Загружаем значение I в стек FPU
//        fmul I          // Умножаем I на I, получаем квадрат I
//
//        fld R           // Загружаем значение R в стек FPU
//        fmul            // Умножаем на квадрат I на R
//
//        fld t           // Загружаем значение t в стек FPU
//        fmul            // Умножаем на R * I^2 * t
//
//        fstp A          // Сохраняем результат в переменной A
//    }
//    printf("A: %.2f Dj\n", A);
//
//    return 0;
//}


//4 задача

int main() {
    // Заданные значения
    double total_price = 3480.0; // Общая цена (в рублях)
    double increase_percentage = 16.0; // Процент повышения цены

    // Вычисляем начальную цену
    double initial_price = 0.0;

    __asm {
        fld total_price       // Загружаем общую цену в стек FPU
        fld1                  // Загружаем 1.0 в стек FPU
        fld increase_percentage // Загружаем процент повышения цены в стек FPU
        fdiv                   // Делим процент повышения цены на 100

        fld1                   // Загружаем 1.0 в стек FPU
        fsub                   // Вычитаем из 1 результат деления (1 - процент повышения цены/100)

        fmul                   // Умножаем общую цену на результат вычитания

        fstp initial_price     // Сохраняем начальную цену
    }
    printf("Price: %.2f rub\n", initial_price);

    return 0;
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
